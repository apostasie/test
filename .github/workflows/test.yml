name: test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # Build here, with buildkit cache, and registry cache, for every platform we target
  # Then commit them to local read-only registry, or local filesystem with cache commit?
  # The load them
  build-dependencies:
    runs-on: "ubuntu-24.04"
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix:
        include:
          - ubuntu: 20.04
            containerd: v1.6.31
          - ubuntu: 20.04
            containerd: v1.7.16
          - ubuntu: 22.04
            containerd: v1.7.16
          - ubuntu: 24.04
            containerd: v1.7.16
          - ubuntu: 24.04
            containerd: main
    env:
      UBUNTU_VERSION: "${{ matrix.ubuntu }}"
      CONTAINERD_VERSION: "${{ matrix.containerd }}"

    steps:
      - name: cache-registry-build
        id: cache-registry-build
        uses: actions/cache@v4
        with:
          path:
            ~/registry-proxy-cache
          key: common-proxy-cache
      - name: "Configure and start registry proxy cache"
        run: |
          # Some of it is platform INDEPENDENT
          # Some of it is Ubuntu specific
          # Some of it is Nerdctl independent
          # Some of it is Nerdctl specific
          mkdir -p ~/registry-proxy-cache
          echo "===== Testing ===="
          ls -lA ~/registry-proxy-cache
          echo "===== Was there some cache already? SHOULD BE ^ ===="
          echo "===== Testing ===="
          echo bla >> ~/registry-proxy-cache/first-step
          echo "===== Testing ===="
          ls -lA ~/registry-proxy-cache
          echo "===== Testing ===="
          echo "${{ env.UBUNTU_VERSION }}-${{ env.CONTAINERD_VERSION }}"
          echo "done reg first step"
      - name: "Build dependencies"
        run: |
          tag="${UBUNTU_VERSION}-${CONTAINERD_VERSION}"
          DOCKER_BUILDKIT=1 docker build \
            -t test-integration:"$tag" \
            --target test-integration \
            --build-arg UBUNTU_VERSION="${UBUNTU_VERSION}" \
            --build-arg CONTAINERD_VERSION="${CONTAINERD_VERSION}" .
          mkdir -p ~/integration-images
          docker save test-integration:"$tag" > test-integration-"$tag".tar.gz

      - name: cache-artifacts
        id: cache-artifacts
        uses: actions/cache/save@v4
        with:
          path:
            ~/integration-images
          key: "${{ matrix.ubuntu }}-${{ matrix.containerd }}"

#  integration:
#    needs: build-dependencies
#    runs-on: "ubuntu-${{ matrix.ubuntu }}"
#    timeout-minutes: 40
#    strategy:
#      fail-fast: false
#      matrix:
#        include:
#          - ubuntu: 20.04
#            containerd: v1.6.31
#          - ubuntu: 20.04
#            containerd: v1.7.16
#          - ubuntu: 22.04
#            containerd: v1.7.16
#          - ubuntu: 24.04
#            containerd: v1.7.16
#          - ubuntu: 24.04
#            containerd: main
#    env:
#      UBUNTU_VERSION: "${{ matrix.ubuntu }}"
#      CONTAINERD_VERSION: "${{ matrix.containerd }}"
#    steps:
#      - uses: actions/checkout@v4.1.6
#        with:
#          fetch-depth: 1
#      - name: cache-registry-mirror
#        id: cache-registry-mirror
#        uses: actions/cache@v4
#        with:
#          path:
#            ~/registry-proxy-cache
#          key: "${{ env.UBUNTU_VERSION }}-${{ env.CONTAINERD_VERSION }}"-proxy-cache
#      - name: cache-bk
#        id: cache-bk
#        uses: actions/cache@v4
#        with:
#          path:
#            /var/lib/docker/buildkit
#          key: "${{ env.UBUNTU_VERSION }}-${{ env.CONTAINERD_VERSION }}"-bk-cache
#      - name: cache-artifacts
#        id: cache-artifacts
#        uses: actions/cache/restore@v4
#        with:
#          path:
#            ~/integration-images
#      - name: "Configure and start buldkit cache"
#        run: |
#          # ${{ env.UBUNTU_VERSION }}-${{ env.CONTAINERD_VERSION }}
#          ls -lA ~/integration-images
#
#
